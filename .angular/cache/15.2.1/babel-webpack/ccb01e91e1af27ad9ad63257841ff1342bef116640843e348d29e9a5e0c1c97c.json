{"ast":null,"code":"import { of } from 'rxjs';\nimport { environment as env } from '../../../environments/environment';\nimport { PRODUCTS_DATA } from 'assets/fake-api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n  }\n  products() {\n    // return this.http.get<Product[]>(`${env.ApiUrl}products?limit=10`)\n    return of(PRODUCTS_DATA);\n  }\n  productDetails(id) {\n    return of(PRODUCTS_DATA[id]);\n    // return this.http.get<any>(`${env.ApiUrl}products/${id}`)\n  }\n\n  addProduct(body) {\n    return this.http.post(`${env.ApiUrl}products`, body);\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAoBA,EAAE,QAAQ,MAAM;AAEpC,SAAQC,WAAW,IAAIC,GAAG,QAAO,mCAAmC;AACpE,SAASC,aAAa,QAAQ,iBAAiB;;;AAK/C,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,QAAQ;IACN;IACA,OAAOP,EAAE,CAACG,aAAa,CAAC;EAC1B;EACAK,cAAc,CAACC,EAAS;IACtB,OAAOT,EAAE,CAACG,aAAa,CAACM,EAAE,CAAC,CAAC;IAE5B;EACF;;EACAC,UAAU,CAACC,IAAY;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,GAAGV,GAAG,CAACW,MAAM,UAAU,EAACF,IAAI,CAAC;EAC9D;;AAdWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["of","environment","env","PRODUCTS_DATA","ProductsService","constructor","http","products","productDetails","id","addProduct","body","post","ApiUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\dev\\stc\\stc\\src\\app\\core\\services\\products.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable,of } from 'rxjs';\r\nimport { Product } from '@app/core/models/products';\r\nimport {environment as env} from '../../../environments/environment';\r\nimport { PRODUCTS_DATA } from 'assets/fake-api';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  constructor(private http: HttpClient) {}\r\n \r\n  products(): Observable<Product[]> {\r\n    // return this.http.get<Product[]>(`${env.ApiUrl}products?limit=10`)\r\n    return of(PRODUCTS_DATA)\r\n  }\r\n  productDetails(id:number): Observable<any> {\r\n    return of(PRODUCTS_DATA[id])\r\n\r\n    // return this.http.get<any>(`${env.ApiUrl}products/${id}`)\r\n  }\r\n  addProduct(body:Product): Observable<Product> {\r\n    return this.http.post<Product>(`${env.ApiUrl}products`,body)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}