{"ast":null,"code":"import { catchError, EMPTY } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/features/products/products.service\";\nimport * as i2 from \"@angular/router\";\nexport class productDetailsResolver {\n  constructor(Service, router) {\n    this.Service = Service;\n    this.router = router;\n  }\n  resolve(route, state) {\n    let id = route.paramMap.get('id');\n    return this.Service.productDetails(id).pipe(catchError(err => {\n      return EMPTY;\n    }));\n  }\n}\nproductDetailsResolver.ɵfac = function productDetailsResolver_Factory(t) {\n  return new (t || productDetailsResolver)(i0.ɵɵinject(i1.ProductsService), i0.ɵɵinject(i2.Router));\n};\nproductDetailsResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: productDetailsResolver,\n  factory: productDetailsResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,EAAEC,KAAK,QAAoB,MAAM;;;;AAMpD,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,OAAwB,EAAUC,MAAc;IAAhD,YAAO,GAAPD,OAAO;IAA2B,WAAM,GAANC,MAAM;EAAY;EAExEC,OAAO,CAACC,KAA6B,EAAGC,KAA0B;IAChE,IAAIC,EAAE,GAAOF,KAAK,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrC,OAAO,IAAI,CAACP,OAAO,CAACQ,cAAc,CAACH,EAAE,CAAE,CAACI,IAAI,CAC3Cb,UAAU,CAAEc,GAAG,IAAI;MACjB,OAAOb,KAAK;IACd,CAAC,CAAC,CACH;EACF;;AAZWC,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAa,SAAtBb,sBAAsB;EAAAc,YAFrB;AAAM","names":["catchError","EMPTY","productDetailsResolver","constructor","Service","router","resolve","route","state","id","paramMap","get","productDetails","pipe","err","factory","providedIn"],"sourceRoot":"","sources":["D:\\dev\\stc\\stc\\src\\app\\core\\resolvers\\product-details-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { ProductsService } from '@app/features/products/products.service';\r\n\r\nimport { catchError, EMPTY, Observable } from 'rxjs';\r\nimport { Product } from '../models/products';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class productDetailsResolver implements Resolve<Product>{\r\n   \r\n\r\n  constructor(private Service: ProductsService ,private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,  state: RouterStateSnapshot):  Observable<Product>  {\r\n    let id:any = route.paramMap.get('id')\r\n    return this.Service.productDetails(id ).pipe(\r\n     catchError((err) => {\r\n       return EMPTY\r\n     })\r\n   )\r\n  }\r\n \r\n \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}